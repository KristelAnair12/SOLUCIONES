# Usando el hecho de que la construcción del shell ${#var} da el número de caracteres
# almacenados en var, reescribe wc en el shell. ¡Asegúrate de usar aritmética entera!
# (Notas: Cambia tu variable IFS a solo un carácter de nueva línea para que los caracteres
# de espacio en blanco iniciales en la entrada se conserven, y también usa la opción -r del
# comando read del shell para que los caracteres de barra invertida al final de línea sean ignorados.)

cctr=0  # contador de caracteres
wctr=0  # contador de palabras
lctr=0  # contador de líneas

whitesp="$IFS"
newline='
'          # Solo un salto de línea

# Configura $IFS a solo un salto de línea para que los espacios en blanco al inicio o final
# no se pierdan al leer cada línea
IFS="$newline"

while read -r line
do
    # Restablece los parámetros posicionales según los datos en $line y obtiene
    # el número de parámetros con $#. Es necesario restablecer $IFS para separar
    # correctamente las palabras.
    IFS="$whitesp"
    set -- $line
    wctr=$((wctr + $#))

    # Suma el número de caracteres en $line más 1 por el salto de línea;
    # ver página 244 para la construcción ${#variable}
    cctr=$((cctr + ${#line} + 1))
    echo "línea:$line"
    echo "ncaracteres:${#line}"

    # Cada iteración suma 1 línea
    lctr=$((lctr + 1))

    # Configura $IFS a solo un salto de línea para que los espacios en blanco
    # al inicio o final no se pierdan al leer cada línea
    IFS="$newline"
done

echo "	$lctr	$wctr	$cctr"

